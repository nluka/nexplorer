import sys

def ttf_to_cpp_array(ttf_file):
    with open(ttf_file, 'rb') as f:
        bytes_data = f.read()

    array_str = ''
    line_length = 10
    for i, byte in enumerate(bytes_data):
        if i % line_length == 0:
            if i != 0:
                array_str += '\n'
        array_str += f'0x{byte:02x},'

    # Remove the last comma
    # array_str = array_str.rstrip(',')

    cpp_array = (
f"""// Auto-generated byte array from {ttf_file}
unsigned char {ttf_file.replace('.', '_')}[] = {{
{array_str}
}};
"""
    )

    output_file = ttf_file.replace('.', '_') + '.h'
    with open(output_file, 'w') as f:
        f.write(cpp_array)

    print(f"Header file {output_file} generated successfully.")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: python ttf_to_cpp_array.py <path_to_ttf_file>")
    else:
        ttf_to_cpp_array(sys.argv[1])